{"version":3,"sources":["components/Articles.js","components/PageLink.js","components/Pagination.js","App.js","index.js"],"names":["Articles","page","perPage","articles","withInfo","startSlicePos","endSlicePos","listOfArticles","slice","map","article","index","key","firstArticle","lastArticle","length","info","className","PageLink","currentPage","to","classNames","Pagination","total","onInfo","selectPerPage","onPerPageChange","pages","Math","ceil","startSlice","endSlice","listOfPages","Array","keys","listOfOption","opt","value","htmlFor","id","type","checked","onChange","event","hidden","getParams","location","searchParams","URLSearchParams","search","get","App","props","target","setState","url","set","toString","setParams","history","push","state","this","prevState","React","Component","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.99cd2601.chunk.js","sourcesContent":["import React from 'react';\n\nconst Articles = ({ page, perPage, articles, withInfo }) => {\n  const startSlicePos = perPage * (page - 1);\n  const endSlicePos = startSlicePos + perPage;\n  const showedArticles = articles.slice(startSlicePos, endSlicePos);\n  const listOfArticles = showedArticles.map((article, index) => (\n    <li key={index}>\"Quarantine days - {article + 1}\"</li>\n  ));\n\n  const firstArticle = (page - 1) * perPage + 1;\n  const lastArticle = firstArticle - 1 + listOfArticles.length;\n  const info = (\n    <span className=\"articles-info\">\n      {firstArticle} - {lastArticle} of {articles.length}\n    </span>\n  );\n\n  return (\n    <div className=\"articles\">\n      <ul>{listOfArticles}</ul>\n      {withInfo ? info : ''}\n    </div>\n  );\n};\n\nexport default Articles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst PageLink = ({ page, currentPage, perPage }) => (\n  <Link\n    to={`/pagintion-react/?page=${page + 1}&perPage=${perPage}`}\n    className={classNames('page-link', {\n      'page-link__active': page + 1 === currentPage,\n    })}\n  >\n    {page + 1}\n  </Link>\n);\n\nexport default PageLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PageLink from './PageLink';\nimport classNames from 'classnames';\n\nconst Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onInfo,\n  withInfo,\n  selectPerPage,\n  onPerPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const startSlice = currentPage < 3 ? 1 : currentPage - 2;\n  const endSlice = currentPage > pages - 2 ? pages - 1 : currentPage + 1;\n\n  const listOfPages = [...Array(pages).keys()]\n    .slice(startSlice, endSlice)\n    .map((page) => (\n      <li key={page}>\n        <PageLink page={page} currentPage={currentPage} perPage={perPage} />\n      </li>\n    ));\n\n  const listOfOption = selectPerPage.map((opt, index) => (\n    <option key={index} value={opt}>\n      {opt}\n    </option>\n  ));\n\n  return (\n    <div className=\"pagination-wrapper\">\n      <ul className=\"pagination-pages\">\n        <div className=\"info-checkbox\">\n          <label htmlFor=\"withInfo-check\">Info:</label>\n          <input\n            id=\"withInfo-check\"\n            type=\"checkbox\"\n            checked={withInfo}\n            onChange={(event) => onInfo(event)}\n          />\n        </div>\n        <li>\n          <Link\n            className={classNames('page-link', {\n              'page-link__disable': currentPage === 1,\n            })}\n            to={`/pagintion-react/?page=${\n              currentPage !== 1 ? currentPage - 1 : 1\n            }&perPage=${perPage}`}\n          >\n            prev\n          </Link>\n        </li>\n        <li>\n          <PageLink page={0} currentPage={currentPage} perPage={perPage} />\n        </li>\n        <li>\n          <span hidden={!(currentPage > 3)}>...</span>\n        </li>\n        {listOfPages}\n        <li>\n          <span hidden={!(currentPage < pages - 2)}>...</span>\n        </li>\n        <li>\n          <PageLink\n            page={pages - 1}\n            currentPage={currentPage}\n            perPage={perPage}\n          />\n        </li>\n        <li>\n          <Link\n            className={classNames('page-link', {\n              'page-link__disable': currentPage === pages,\n            })}\n            to={`/pagintion-react/?page=${\n              currentPage !== pages ? currentPage + 1 : pages\n            }&perPage=${perPage}`}\n          >\n            next\n          </Link>\n        </li>\n        <select\n          className=\"pages-select\"\n          value={perPage}\n          onChange={(event) => onPerPageChange(event)}\n        >\n          {listOfOption}\n        </select>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport Articles from './components/Articles';\nimport Pagination from './components/Pagination';\nimport './App.css';\n\nconst articles = [...Array(42).keys()];\n\nfunction getParams(location) {\n  const searchParams = new URLSearchParams(location.search);\n  return {\n    page: +searchParams.get('page') || 1,\n    perPage: +searchParams.get('perPage') || 5,\n  };\n}\n\nfunction setParams({ page, perPage }) {\n  const searchParams = new URLSearchParams();\n  searchParams.set('page', page);\n  searchParams.set('perPage', perPage);\n  return searchParams.toString();\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: articles.length /* required */,\n      perPage: 5 /* optional with 5 by default */,\n      currentPage: 1 /* optional with 1 by default */,\n      articles: articles,\n      withInfo: true,\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { page, perPage } = getParams(location);\n    this.setState({\n      currentPage: page,\n      perPage: perPage,\n    });\n  }\n\n  componentDidUpdate() {\n    const { location } = this.props;\n    const { page } = getParams(location);\n\n    this.setState((prevState) => {\n      if (prevState.currentPage !== page) {\n        return {\n          currentPage: page,\n        };\n      }\n    });\n  }\n\n  onPerPageChange = (event) => {\n    const perPage = +event.target.value;\n\n    this.setState({\n      perPage,\n      currentPage: 1,\n    });\n\n    const url = setParams({\n      page: 1,\n      perPage: perPage,\n    });\n    this.props.history.push(`?${url}`);\n  };\n\n  onInfo = (event) => {\n    this.setState({\n      withInfo: event.target.checked,\n    });\n  };\n\n  render() {\n    const { total, perPage, currentPage, articles, withInfo } = this.state;\n\n    return (\n      <main>\n        <h1>Pagination w/ queryParams</h1>\n        <Articles\n          page={currentPage}\n          perPage={perPage}\n          articles={articles}\n          withInfo={withInfo}\n        />\n        <Pagination\n          onPerPageChange={this.onPerPageChange}\n          total={total}\n          perPage={perPage}\n          currentPage={currentPage}\n          withInfo={withInfo}\n          onInfo={this.onInfo}\n          selectPerPage={[3, 5, 10, 20]}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path=\"/pagintion-react/\" component={App} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}